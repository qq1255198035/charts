{"remainingRequest":"D:\\Learn\\Charts\\mycharts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learn\\Charts\\mycharts\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Learn\\Charts\\mycharts\\src\\components\\HelloWorld.vue","mtime":1580466137813},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575082943053},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\babel-loader\\lib\\index.js","mtime":1558102541745},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575082943053},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\vue-loader\\lib\\index.js","mtime":1580460575191}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\n\t\n\tconst data = [\n\t\t{ city: '中国（北京）', type: '确诊病例', value: 10 },\n\t\t{ city: '中国（北京）', type: '疑似病例', value: 20 },\n\t\t{ city: '中国（北京）', type: '死亡人数', value: 30 },\n\t\t\n\t\t{ city: '美国（华盛顿）', type: '确诊病例', value: 500 },\n\t\t{ city: '美国（华盛顿）', type: '疑似病例', value: 100 },\n\t\t{ city: '美国（华盛顿）', type: '死亡人数', value: 20 },\n\t\t\n\t\t{ city: '印度（德里）', type: '确诊病例', value: 2 },\n\t\t{ city: '印度（德里）', type: '疑似病例', value: 30 },\n\t\t{ city: '印度（德里）', type: '死亡人数', value: 68 },\n\t\t\n\t\t{ city: '俄罗斯（莫斯科）', type: '确诊病例', value: 40 },\n\t\t{ city: '俄罗斯（莫斯科）', type: '疑似病例', value: 20 },\n\t\t{ city: '俄罗斯（莫斯科）', type: '死亡人数', value: 50 },\n\t\t\n\t\t{ city: '法国（巴黎）', type: '确诊病例', value: 1000 },\n\t\t{ city: '法国（巴黎）', type: '疑似病例', value: 300 },\n\t\t{ city: '法国（巴黎）', type: '死亡人数', value: 2 },\n\t\t\n\t\t{ city: '韩国（首尔）', type: '确诊病例', value: 300 },\n\t\t{ city: '韩国（首尔）', type: '疑似病例', value: 20 },\n\t\t{ city: '韩国（首尔）', type: '死亡人数', value:10 },\n\t\t\n\t\t{ city: '丹麦（哥本哈根）', type: '确诊病例', value: 200 },\n\t\t{ city: '丹麦（哥本哈根）', type: '疑似病例', value: 10 },\n\t\t{ city: '丹麦（哥本哈根）', type: '死亡人数', value: 10 },\n\t];\n\t\n\nexport default {\n\tname: 'HelloWorld',\n\tprops: {\n\t\tmsg: String\n\t},\n\tmounted(){\n\t\tconst chart = new G2.Chart({\n\t\t\tcontainer: 'box',\n\t\t\tforceFit: true,\n\t\t\theight: 500,\n\t\t\tpadding: [ 20, 20, 50, 140 ]\n\t\t});\n\t\tchart.source(data, {\n\t\t\tvalue: {\n\t\t\t\tmin: 0,\n\t\t\t\tnice: false,\n\t\t\t\talias: '各省感染人数（例）'\n\t\t\t}\n\t\t});\n\t\tchart.axis('city', {\n\t\t\t\n\t\t\tlabel: {\n\t\t\t\ttextStyle: {\n\t\t\t\t\tfill: '#595959',\n\t\t\t\t\tfontSize: 12\n\t\t\t\t}\n\t\t\t},\n\t\t\ttickLine: {\n\t\t\t\talignWithLabel: false,\n\t\t\t\tlength: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\tlineWidth: 0\n\t\t\t}\n\t\t});\n\t\tchart.axis('value', {\n\t\t\tlabel: null,\n\t\t\ttitle: {\n\t\t\t\toffset: 30,\n\t\t\t\ttextStyle: {\n\t\t\t\t\tfontSize: 14,\n\t\t\t\t\tfontWeight: 300\n\t\t\t\t}\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tlineStyle: {\n\t\t\t\t\tlineWidth: 0\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// 条形图 指示器位置\n\t\tchart.legend({\n\t\t\tposition: 'top-center'\n\t\t});\n\t\tchart.coord().transpose();\n\t\t// 条形图的样式\n\t\tchart.intervalStack().position('city*value').color('type*city', (type, city) => {\n\t\t\tlet color;\n\t\t\tif (type === '确诊病例') color = '#1890ff';\n\t\t\tif (type === '疑似病例') color = '#ffff00';\n\t\t\tif (type === '死亡人数') color = '#f5222d';\n\t\t\treturn color;\n\t\t})\n\t\t.size(26)\n\t\t.opacity(1)\n\t\t// 条形图里面的数字的样式\n\t\t.label('value*type', (val, t) => {\n\t\t\tconst color = (t === '确诊病例') ? 'white' : '#47494b';\n\t\t\tif (val < 0.05) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn {\n\t\t\tposition: 'middle',\n\t\t\toffset: 0,\n\t\t\ttextStyle: {\n\t\t\t\tfontSize: 12,\n\t\t\t\tfill: color,\n\t\t\t\tshadowBlur: 2,\n\t\t\t\tshadowColor: 'rgba(0, 0, 0, .45)'\n\t\t\t}\n\t\t\t};\n\t\t});\n\t\tchart.render();\n\t}\n}\n\n\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div id=\"box\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\t\r\n\tconst data = [\r\n\t\t{ city: '中国（北京）', type: '确诊病例', value: 10 },\r\n\t\t{ city: '中国（北京）', type: '疑似病例', value: 20 },\r\n\t\t{ city: '中国（北京）', type: '死亡人数', value: 30 },\r\n\t\t\r\n\t\t{ city: '美国（华盛顿）', type: '确诊病例', value: 500 },\r\n\t\t{ city: '美国（华盛顿）', type: '疑似病例', value: 100 },\r\n\t\t{ city: '美国（华盛顿）', type: '死亡人数', value: 20 },\r\n\t\t\r\n\t\t{ city: '印度（德里）', type: '确诊病例', value: 2 },\r\n\t\t{ city: '印度（德里）', type: '疑似病例', value: 30 },\r\n\t\t{ city: '印度（德里）', type: '死亡人数', value: 68 },\r\n\t\t\r\n\t\t{ city: '俄罗斯（莫斯科）', type: '确诊病例', value: 40 },\r\n\t\t{ city: '俄罗斯（莫斯科）', type: '疑似病例', value: 20 },\r\n\t\t{ city: '俄罗斯（莫斯科）', type: '死亡人数', value: 50 },\r\n\t\t\r\n\t\t{ city: '法国（巴黎）', type: '确诊病例', value: 1000 },\r\n\t\t{ city: '法国（巴黎）', type: '疑似病例', value: 300 },\r\n\t\t{ city: '法国（巴黎）', type: '死亡人数', value: 2 },\r\n\t\t\r\n\t\t{ city: '韩国（首尔）', type: '确诊病例', value: 300 },\r\n\t\t{ city: '韩国（首尔）', type: '疑似病例', value: 20 },\r\n\t\t{ city: '韩国（首尔）', type: '死亡人数', value:10 },\r\n\t\t\r\n\t\t{ city: '丹麦（哥本哈根）', type: '确诊病例', value: 200 },\r\n\t\t{ city: '丹麦（哥本哈根）', type: '疑似病例', value: 10 },\r\n\t\t{ city: '丹麦（哥本哈根）', type: '死亡人数', value: 10 },\r\n\t];\r\n\t\r\n\r\nexport default {\r\n\tname: 'HelloWorld',\r\n\tprops: {\r\n\t\tmsg: String\r\n\t},\r\n\tmounted(){\r\n\t\tconst chart = new G2.Chart({\r\n\t\t\tcontainer: 'box',\r\n\t\t\tforceFit: true,\r\n\t\t\theight: 500,\r\n\t\t\tpadding: [ 20, 20, 50, 140 ]\r\n\t\t});\r\n\t\tchart.source(data, {\r\n\t\t\tvalue: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tnice: false,\r\n\t\t\t\talias: '各省感染人数（例）'\r\n\t\t\t}\r\n\t\t});\r\n\t\tchart.axis('city', {\r\n\t\t\t\r\n\t\t\tlabel: {\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfill: '#595959',\r\n\t\t\t\t\tfontSize: 12\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttickLine: {\r\n\t\t\t\talignWithLabel: false,\r\n\t\t\t\tlength: 0\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tlineWidth: 0\r\n\t\t\t}\r\n\t\t});\r\n\t\tchart.axis('value', {\r\n\t\t\tlabel: null,\r\n\t\t\ttitle: {\r\n\t\t\t\toffset: 30,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\tfontWeight: 300\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tlineStyle: {\r\n\t\t\t\t\tlineWidth: 0\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t// 条形图 指示器位置\r\n\t\tchart.legend({\r\n\t\t\tposition: 'top-center'\r\n\t\t});\r\n\t\tchart.coord().transpose();\r\n\t\t// 条形图的样式\r\n\t\tchart.intervalStack().position('city*value').color('type*city', (type, city) => {\r\n\t\t\tlet color;\r\n\t\t\tif (type === '确诊病例') color = '#1890ff';\r\n\t\t\tif (type === '疑似病例') color = '#ffff00';\r\n\t\t\tif (type === '死亡人数') color = '#f5222d';\r\n\t\t\treturn color;\r\n\t\t})\r\n\t\t.size(26)\r\n\t\t.opacity(1)\r\n\t\t// 条形图里面的数字的样式\r\n\t\t.label('value*type', (val, t) => {\r\n\t\t\tconst color = (t === '确诊病例') ? 'white' : '#47494b';\r\n\t\t\tif (val < 0.05) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\tposition: 'middle',\r\n\t\t\toffset: 0,\r\n\t\t\ttextStyle: {\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\tfill: color,\r\n\t\t\t\tshadowBlur: 2,\r\n\t\t\t\tshadowColor: 'rgba(0, 0, 0, .45)'\r\n\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t\tchart.render();\r\n\t}\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n\t<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\th3 {\r\n\t\tmargin: 40px 0 0;\r\n\t}\r\n\tul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\tli {\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 0 10px;\r\n\t}\r\n\ta {\r\n\t\tcolor: #42b983;\r\n\t}\r\n</style>\r\n"]}]}