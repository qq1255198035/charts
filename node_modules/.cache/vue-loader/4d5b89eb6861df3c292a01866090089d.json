{"remainingRequest":"D:\\Learn\\Charts\\mycharts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learn\\Charts\\mycharts\\src\\components\\MyCharts.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Learn\\Charts\\mycharts\\src\\components\\MyCharts.vue","mtime":1580470479754},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575082943053},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\babel-loader\\lib\\index.js","mtime":1558102541745},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575082943053},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\vue-loader\\lib\\index.js","mtime":1580460575191}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    data(){\r\n        return{\r\n            data:[\r\n                \r\n            ],\r\n            num: 1\r\n        }\r\n    },\r\n    methods:{\r\n        auto(){\r\n                this.num ++;\r\n                this.data.push(\r\n                    { type: `汽车 + ${this.num}`, value: 34 },\r\n                )\r\n                this.chart.changeData(this.data)\r\n                console.log(this.data)\r\n           \r\n        }\r\n    },\r\n\tmounted(){\r\n        const chart = new G2.Chart({\r\n            container: 'box2',\r\n            forceFit: true,\r\n            height: 500,\r\n            padding: [ 20, 40, 50, 124 ]\r\n        });\r\n        chart.source(this.data, {\r\n            value: {\r\n                min: 0,\r\n                nice: false,\r\n                alias: '各省确诊人数（例）'\r\n            }\r\n        });\r\n        chart.axis('type', {\r\n            label: {\r\n                textStyle: {\r\n                    fill: '#8d8d8d',\r\n                    fontSize: 12\r\n                }\r\n            },\r\n            tickLine: {\r\n                alignWithLabel: false,\r\n                length: 0\r\n            },\r\n            line: {\r\n                lineWidth: 0\r\n            }\r\n        });\r\n        chart.axis('value', {\r\n            label: null,\r\n            title: {\r\n                offset: 30,\r\n                textStyle: {\r\n                    fontSize: 12,\r\n                    fontWeight: 300\r\n                }\r\n            }\r\n        });\r\n        //chart.legend(false);\r\n        chart.coord().transpose();\r\n        chart.interval().position('type*value').size(26)\r\n        .opacity(1)\r\n        .label('value', {\r\n            textStyle: {\r\n            fill: '#fff'\r\n            },\r\n            offset: 10\r\n        });\r\n        chart.render();\r\n        this.chart = chart;\r\n        setInterval(()=>{\r\n            console.log(1)\r\n            this.auto()\r\n        },1000)\r\n\t}\r\n}\r\n\r\n\r\n",{"version":3,"sources":["MyCharts.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyCharts.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div id=\"box2\"></div>\r\n   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            data:[\r\n                \r\n            ],\r\n            num: 1\r\n        }\r\n    },\r\n    methods:{\r\n        auto(){\r\n                this.num ++;\r\n                this.data.push(\r\n                    { type: `汽车 + ${this.num}`, value: 34 },\r\n                )\r\n                this.chart.changeData(this.data)\r\n                console.log(this.data)\r\n           \r\n        }\r\n    },\r\n\tmounted(){\r\n        const chart = new G2.Chart({\r\n            container: 'box2',\r\n            forceFit: true,\r\n            height: 500,\r\n            padding: [ 20, 40, 50, 124 ]\r\n        });\r\n        chart.source(this.data, {\r\n            value: {\r\n                min: 0,\r\n                nice: false,\r\n                alias: '各省确诊人数（例）'\r\n            }\r\n        });\r\n        chart.axis('type', {\r\n            label: {\r\n                textStyle: {\r\n                    fill: '#8d8d8d',\r\n                    fontSize: 12\r\n                }\r\n            },\r\n            tickLine: {\r\n                alignWithLabel: false,\r\n                length: 0\r\n            },\r\n            line: {\r\n                lineWidth: 0\r\n            }\r\n        });\r\n        chart.axis('value', {\r\n            label: null,\r\n            title: {\r\n                offset: 30,\r\n                textStyle: {\r\n                    fontSize: 12,\r\n                    fontWeight: 300\r\n                }\r\n            }\r\n        });\r\n        //chart.legend(false);\r\n        chart.coord().transpose();\r\n        chart.interval().position('type*value').size(26)\r\n        .opacity(1)\r\n        .label('value', {\r\n            textStyle: {\r\n            fill: '#fff'\r\n            },\r\n            offset: 10\r\n        });\r\n        chart.render();\r\n        this.chart = chart;\r\n        setInterval(()=>{\r\n            console.log(1)\r\n            this.auto()\r\n        },1000)\r\n\t}\r\n}\r\n\r\n\r\n</script>\r\n\r\n\t<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\th3 {\r\n\t\tmargin: 40px 0 0;\r\n\t}\r\n\tul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\tli {\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 0 10px;\r\n\t}\r\n\ta {\r\n\t\tcolor: #42b983;\r\n\t}\r\n</style>\r\n"]}]}