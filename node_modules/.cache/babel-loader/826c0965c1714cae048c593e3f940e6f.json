{"remainingRequest":"D:\\Learn\\Charts\\mycharts\\node_modules\\babel-loader\\lib\\index.js!D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Learn\\Charts\\mycharts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learn\\Charts\\mycharts\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Learn\\Charts\\mycharts\\src\\components\\HelloWorld.vue","mtime":1580466137813},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575082943053},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\babel-loader\\lib\\index.js","mtime":1558102541745},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575082943053},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\vue-loader\\lib\\index.js","mtime":1580460575191}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nvar data = [{\n  city: '中国（北京）',\n  type: '确诊病例',\n  value: 10\n}, {\n  city: '中国（北京）',\n  type: '疑似病例',\n  value: 20\n}, {\n  city: '中国（北京）',\n  type: '死亡人数',\n  value: 30\n}, {\n  city: '美国（华盛顿）',\n  type: '确诊病例',\n  value: 500\n}, {\n  city: '美国（华盛顿）',\n  type: '疑似病例',\n  value: 100\n}, {\n  city: '美国（华盛顿）',\n  type: '死亡人数',\n  value: 20\n}, {\n  city: '印度（德里）',\n  type: '确诊病例',\n  value: 2\n}, {\n  city: '印度（德里）',\n  type: '疑似病例',\n  value: 30\n}, {\n  city: '印度（德里）',\n  type: '死亡人数',\n  value: 68\n}, {\n  city: '俄罗斯（莫斯科）',\n  type: '确诊病例',\n  value: 40\n}, {\n  city: '俄罗斯（莫斯科）',\n  type: '疑似病例',\n  value: 20\n}, {\n  city: '俄罗斯（莫斯科）',\n  type: '死亡人数',\n  value: 50\n}, {\n  city: '法国（巴黎）',\n  type: '确诊病例',\n  value: 1000\n}, {\n  city: '法国（巴黎）',\n  type: '疑似病例',\n  value: 300\n}, {\n  city: '法国（巴黎）',\n  type: '死亡人数',\n  value: 2\n}, {\n  city: '韩国（首尔）',\n  type: '确诊病例',\n  value: 300\n}, {\n  city: '韩国（首尔）',\n  type: '疑似病例',\n  value: 20\n}, {\n  city: '韩国（首尔）',\n  type: '死亡人数',\n  value: 10\n}, {\n  city: '丹麦（哥本哈根）',\n  type: '确诊病例',\n  value: 200\n}, {\n  city: '丹麦（哥本哈根）',\n  type: '疑似病例',\n  value: 10\n}, {\n  city: '丹麦（哥本哈根）',\n  type: '死亡人数',\n  value: 10\n}];\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  mounted: function mounted() {\n    var chart = new G2.Chart({\n      container: 'box',\n      forceFit: true,\n      height: 500,\n      padding: [20, 20, 50, 140]\n    });\n    chart.source(data, {\n      value: {\n        min: 0,\n        nice: false,\n        alias: '各省感染人数（例）'\n      }\n    });\n    chart.axis('city', {\n      label: {\n        textStyle: {\n          fill: '#595959',\n          fontSize: 12\n        }\n      },\n      tickLine: {\n        alignWithLabel: false,\n        length: 0\n      },\n      line: {\n        lineWidth: 0\n      }\n    });\n    chart.axis('value', {\n      label: null,\n      title: {\n        offset: 30,\n        textStyle: {\n          fontSize: 14,\n          fontWeight: 300\n        }\n      },\n      grid: {\n        lineStyle: {\n          lineWidth: 0\n        }\n      }\n    }); // 条形图 指示器位置\n\n    chart.legend({\n      position: 'top-center'\n    });\n    chart.coord().transpose(); // 条形图的样式\n\n    chart.intervalStack().position('city*value').color('type*city', function (type, city) {\n      var color;\n      if (type === '确诊病例') color = '#1890ff';\n      if (type === '疑似病例') color = '#ffff00';\n      if (type === '死亡人数') color = '#f5222d';\n      return color;\n    }).size(26).opacity(1) // 条形图里面的数字的样式\n    .label('value*type', function (val, t) {\n      var color = t === '确诊病例' ? 'white' : '#47494b';\n\n      if (val < 0.05) {\n        return false;\n      }\n\n      return {\n        position: 'middle',\n        offset: 0,\n        textStyle: {\n          fontSize: 12,\n          fill: color,\n          shadowBlur: 2,\n          shadowColor: 'rgba(0, 0, 0, .45)'\n        }\n      };\n    });\n    chart.render();\n  }\n};",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;AAQA,IAAA,IAAA,GAAA,CACA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CADA,EAEA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAFA,EAGA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAHA,EAKA;AAAA,EAAA,IAAA,EAAA,SAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CALA,EAMA;AAAA,EAAA,IAAA,EAAA,SAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CANA,EAOA;AAAA,EAAA,IAAA,EAAA,SAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAPA,EASA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CATA,EAUA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAVA,EAWA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAXA,EAaA;AAAA,EAAA,IAAA,EAAA,UAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAbA,EAcA;AAAA,EAAA,IAAA,EAAA,UAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAdA,EAeA;AAAA,EAAA,IAAA,EAAA,UAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAfA,EAiBA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAjBA,EAkBA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAlBA,EAmBA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAnBA,EAqBA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CArBA,EAsBA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAtBA,EAuBA;AAAA,EAAA,IAAA,EAAA,QAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAvBA,EAyBA;AAAA,EAAA,IAAA,EAAA,UAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CAzBA,EA0BA;AAAA,EAAA,IAAA,EAAA,UAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CA1BA,EA2BA;AAAA,EAAA,IAAA,EAAA,UAAA;AAAA,EAAA,IAAA,EAAA,MAAA;AAAA,EAAA,KAAA,EAAA;AAAA,CA3BA,CAAA;AA+BA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAFA;AAKA,EAAA,OALA,qBAKA;AACA,QAAA,KAAA,GAAA,IAAA,EAAA,CAAA,KAAA,CAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA,GAHA;AAIA,MAAA,OAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA;AAJA,KAAA,CAAA;AAMA,IAAA,KAAA,CAAA,MAAA,CAAA,IAAA,EAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA;AAHA;AADA,KAAA;AAOA,IAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,QAAA,EAAA;AAFA;AADA,OAFA;AAQA,MAAA,QAAA,EAAA;AACA,QAAA,cAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA;AAFA,OARA;AAYA,MAAA,IAAA,EAAA;AACA,QAAA,SAAA,EAAA;AADA;AAZA,KAAA;AAgBA,IAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA,EADA;AAEA,UAAA,UAAA,EAAA;AAFA;AAFA,OAFA;AASA,MAAA,IAAA,EAAA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,SAAA,EAAA;AADA;AADA;AATA,KAAA,EA9BA,CA6CA;;AACA,IAAA,KAAA,CAAA,MAAA,CAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,IAAA,KAAA,CAAA,KAAA,GAAA,SAAA,GAjDA,CAkDA;;AACA,IAAA,KAAA,CAAA,aAAA,GAAA,QAAA,CAAA,YAAA,EAAA,KAAA,CAAA,WAAA,EAAA,UAAA,IAAA,EAAA,IAAA,EAAA;AACA,UAAA,KAAA;AACA,UAAA,IAAA,KAAA,MAAA,EAAA,KAAA,GAAA,SAAA;AACA,UAAA,IAAA,KAAA,MAAA,EAAA,KAAA,GAAA,SAAA;AACA,UAAA,IAAA,KAAA,MAAA,EAAA,KAAA,GAAA,SAAA;AACA,aAAA,KAAA;AACA,KANA,EAOA,IAPA,CAOA,EAPA,EAQA,OARA,CAQA,CARA,EASA;AATA,KAUA,KAVA,CAUA,YAVA,EAUA,UAAA,GAAA,EAAA,CAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA,KAAA,MAAA,GAAA,OAAA,GAAA,SAAA;;AACA,UAAA,GAAA,GAAA,IAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,MAAA,EAAA,CAFA;AAGA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA,EADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,UAAA,EAAA,CAHA;AAIA,UAAA,WAAA,EAAA;AAJA;AAHA,OAAA;AAUA,KAzBA;AA0BA,IAAA,KAAA,CAAA,MAAA;AACA;AAnFA,CAAA","sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div id=\"box\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\t\r\n\tconst data = [\r\n\t\t{ city: '中国（北京）', type: '确诊病例', value: 10 },\r\n\t\t{ city: '中国（北京）', type: '疑似病例', value: 20 },\r\n\t\t{ city: '中国（北京）', type: '死亡人数', value: 30 },\r\n\t\t\r\n\t\t{ city: '美国（华盛顿）', type: '确诊病例', value: 500 },\r\n\t\t{ city: '美国（华盛顿）', type: '疑似病例', value: 100 },\r\n\t\t{ city: '美国（华盛顿）', type: '死亡人数', value: 20 },\r\n\t\t\r\n\t\t{ city: '印度（德里）', type: '确诊病例', value: 2 },\r\n\t\t{ city: '印度（德里）', type: '疑似病例', value: 30 },\r\n\t\t{ city: '印度（德里）', type: '死亡人数', value: 68 },\r\n\t\t\r\n\t\t{ city: '俄罗斯（莫斯科）', type: '确诊病例', value: 40 },\r\n\t\t{ city: '俄罗斯（莫斯科）', type: '疑似病例', value: 20 },\r\n\t\t{ city: '俄罗斯（莫斯科）', type: '死亡人数', value: 50 },\r\n\t\t\r\n\t\t{ city: '法国（巴黎）', type: '确诊病例', value: 1000 },\r\n\t\t{ city: '法国（巴黎）', type: '疑似病例', value: 300 },\r\n\t\t{ city: '法国（巴黎）', type: '死亡人数', value: 2 },\r\n\t\t\r\n\t\t{ city: '韩国（首尔）', type: '确诊病例', value: 300 },\r\n\t\t{ city: '韩国（首尔）', type: '疑似病例', value: 20 },\r\n\t\t{ city: '韩国（首尔）', type: '死亡人数', value:10 },\r\n\t\t\r\n\t\t{ city: '丹麦（哥本哈根）', type: '确诊病例', value: 200 },\r\n\t\t{ city: '丹麦（哥本哈根）', type: '疑似病例', value: 10 },\r\n\t\t{ city: '丹麦（哥本哈根）', type: '死亡人数', value: 10 },\r\n\t];\r\n\t\r\n\r\nexport default {\r\n\tname: 'HelloWorld',\r\n\tprops: {\r\n\t\tmsg: String\r\n\t},\r\n\tmounted(){\r\n\t\tconst chart = new G2.Chart({\r\n\t\t\tcontainer: 'box',\r\n\t\t\tforceFit: true,\r\n\t\t\theight: 500,\r\n\t\t\tpadding: [ 20, 20, 50, 140 ]\r\n\t\t});\r\n\t\tchart.source(data, {\r\n\t\t\tvalue: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tnice: false,\r\n\t\t\t\talias: '各省感染人数（例）'\r\n\t\t\t}\r\n\t\t});\r\n\t\tchart.axis('city', {\r\n\t\t\t\r\n\t\t\tlabel: {\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfill: '#595959',\r\n\t\t\t\t\tfontSize: 12\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttickLine: {\r\n\t\t\t\talignWithLabel: false,\r\n\t\t\t\tlength: 0\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tlineWidth: 0\r\n\t\t\t}\r\n\t\t});\r\n\t\tchart.axis('value', {\r\n\t\t\tlabel: null,\r\n\t\t\ttitle: {\r\n\t\t\t\toffset: 30,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\tfontWeight: 300\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tlineStyle: {\r\n\t\t\t\t\tlineWidth: 0\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t// 条形图 指示器位置\r\n\t\tchart.legend({\r\n\t\t\tposition: 'top-center'\r\n\t\t});\r\n\t\tchart.coord().transpose();\r\n\t\t// 条形图的样式\r\n\t\tchart.intervalStack().position('city*value').color('type*city', (type, city) => {\r\n\t\t\tlet color;\r\n\t\t\tif (type === '确诊病例') color = '#1890ff';\r\n\t\t\tif (type === '疑似病例') color = '#ffff00';\r\n\t\t\tif (type === '死亡人数') color = '#f5222d';\r\n\t\t\treturn color;\r\n\t\t})\r\n\t\t.size(26)\r\n\t\t.opacity(1)\r\n\t\t// 条形图里面的数字的样式\r\n\t\t.label('value*type', (val, t) => {\r\n\t\t\tconst color = (t === '确诊病例') ? 'white' : '#47494b';\r\n\t\t\tif (val < 0.05) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\tposition: 'middle',\r\n\t\t\toffset: 0,\r\n\t\t\ttextStyle: {\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\tfill: color,\r\n\t\t\t\tshadowBlur: 2,\r\n\t\t\t\tshadowColor: 'rgba(0, 0, 0, .45)'\r\n\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t\tchart.render();\r\n\t}\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n\t<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\th3 {\r\n\t\tmargin: 40px 0 0;\r\n\t}\r\n\tul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\tli {\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 0 10px;\r\n\t}\r\n\ta {\r\n\t\tcolor: #42b983;\r\n\t}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}