{"remainingRequest":"D:\\Learn\\Charts\\mycharts\\node_modules\\babel-loader\\lib\\index.js!D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Learn\\Charts\\mycharts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learn\\Charts\\mycharts\\src\\components\\MyCharts.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Learn\\Charts\\mycharts\\src\\components\\MyCharts.vue","mtime":1580470479754},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575082943053},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\babel-loader\\lib\\index.js","mtime":1558102541745},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575082943053},{"path":"D:\\Learn\\Charts\\mycharts\\node_modules\\vue-loader\\lib\\index.js","mtime":1580460575191}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      data: [],\n      num: 1\n    };\n  },\n  methods: {\n    auto: function auto() {\n      this.num++;\n      this.data.push({\n        type: \"\\u6C7D\\u8F66 + \".concat(this.num),\n        value: 34\n      });\n      this.chart.changeData(this.data);\n      console.log(this.data);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var chart = new G2.Chart({\n      container: 'box2',\n      forceFit: true,\n      height: 500,\n      padding: [20, 40, 50, 124]\n    });\n    chart.source(this.data, {\n      value: {\n        min: 0,\n        nice: false,\n        alias: '各省确诊人数（例）'\n      }\n    });\n    chart.axis('type', {\n      label: {\n        textStyle: {\n          fill: '#8d8d8d',\n          fontSize: 12\n        }\n      },\n      tickLine: {\n        alignWithLabel: false,\n        length: 0\n      },\n      line: {\n        lineWidth: 0\n      }\n    });\n    chart.axis('value', {\n      label: null,\n      title: {\n        offset: 30,\n        textStyle: {\n          fontSize: 12,\n          fontWeight: 300\n        }\n      }\n    }); //chart.legend(false);\n\n    chart.coord().transpose();\n    chart.interval().position('type*value').size(26).opacity(1).label('value', {\n      textStyle: {\n        fill: '#fff'\n      },\n      offset: 10\n    });\n    chart.render();\n    this.chart = chart;\n    setInterval(function () {\n      console.log(1);\n\n      _this.auto();\n    }, 1000);\n  }\n};",{"version":3,"sources":["MyCharts.vue"],"names":[],"mappings":";;;;;;;AAQA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAIA,MAAA,GAAA,EAAA;AAJA,KAAA;AAMA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,GAAA;AACA,WAAA,IAAA,CAAA,IAAA,CACA;AAAA,QAAA,IAAA,2BAAA,KAAA,GAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA;AAGA,WAAA,KAAA,CAAA,UAAA,CAAA,KAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,IAAA;AAEA;AATA,GATA;AAoBA,EAAA,OApBA,qBAoBA;AAAA;;AACA,QAAA,KAAA,GAAA,IAAA,EAAA,CAAA,KAAA,CAAA;AACA,MAAA,SAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA,GAHA;AAIA,MAAA,OAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA;AAJA,KAAA,CAAA;AAMA,IAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,EAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA;AAHA;AADA,KAAA;AAOA,IAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,QAAA,EAAA;AAFA;AADA,OADA;AAOA,MAAA,QAAA,EAAA;AACA,QAAA,cAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA;AAFA,OAPA;AAWA,MAAA,IAAA,EAAA;AACA,QAAA,SAAA,EAAA;AADA;AAXA,KAAA;AAeA,IAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA,EADA;AAEA,UAAA,UAAA,EAAA;AAFA;AAFA;AAFA,KAAA,EA7BA,CAuCA;;AACA,IAAA,KAAA,CAAA,KAAA,GAAA,SAAA;AACA,IAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,YAAA,EAAA,IAAA,CAAA,EAAA,EACA,OADA,CACA,CADA,EAEA,KAFA,CAEA,OAFA,EAEA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OADA;AAIA,MAAA,MAAA,EAAA;AAJA,KAFA;AAQA,IAAA,KAAA,CAAA,MAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,IAAA,WAAA,CAAA,YAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA;;AACA,MAAA,KAAA,CAAA,IAAA;AACA,KAHA,EAGA,IAHA,CAAA;AAIA;AA3EA,CAAA","sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div id=\"box2\"></div>\r\n   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            data:[\r\n                \r\n            ],\r\n            num: 1\r\n        }\r\n    },\r\n    methods:{\r\n        auto(){\r\n                this.num ++;\r\n                this.data.push(\r\n                    { type: `汽车 + ${this.num}`, value: 34 },\r\n                )\r\n                this.chart.changeData(this.data)\r\n                console.log(this.data)\r\n           \r\n        }\r\n    },\r\n\tmounted(){\r\n        const chart = new G2.Chart({\r\n            container: 'box2',\r\n            forceFit: true,\r\n            height: 500,\r\n            padding: [ 20, 40, 50, 124 ]\r\n        });\r\n        chart.source(this.data, {\r\n            value: {\r\n                min: 0,\r\n                nice: false,\r\n                alias: '各省确诊人数（例）'\r\n            }\r\n        });\r\n        chart.axis('type', {\r\n            label: {\r\n                textStyle: {\r\n                    fill: '#8d8d8d',\r\n                    fontSize: 12\r\n                }\r\n            },\r\n            tickLine: {\r\n                alignWithLabel: false,\r\n                length: 0\r\n            },\r\n            line: {\r\n                lineWidth: 0\r\n            }\r\n        });\r\n        chart.axis('value', {\r\n            label: null,\r\n            title: {\r\n                offset: 30,\r\n                textStyle: {\r\n                    fontSize: 12,\r\n                    fontWeight: 300\r\n                }\r\n            }\r\n        });\r\n        //chart.legend(false);\r\n        chart.coord().transpose();\r\n        chart.interval().position('type*value').size(26)\r\n        .opacity(1)\r\n        .label('value', {\r\n            textStyle: {\r\n            fill: '#fff'\r\n            },\r\n            offset: 10\r\n        });\r\n        chart.render();\r\n        this.chart = chart;\r\n        setInterval(()=>{\r\n            console.log(1)\r\n            this.auto()\r\n        },1000)\r\n\t}\r\n}\r\n\r\n\r\n</script>\r\n\r\n\t<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\th3 {\r\n\t\tmargin: 40px 0 0;\r\n\t}\r\n\tul {\r\n\t\tlist-style-type: none;\r\n\t\tpadding: 0;\r\n\t}\r\n\tli {\r\n\t\tdisplay: inline-block;\r\n\t\tmargin: 0 10px;\r\n\t}\r\n\ta {\r\n\t\tcolor: #42b983;\r\n\t}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}